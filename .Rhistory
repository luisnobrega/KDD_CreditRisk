}
#while (i_vcp<=0.01) {
model = rpart(IND_BOM ~., data = train, control = rpart.control(cp=0,0009, xval=12, maxdepth=10))
#fancyRpartPlot(model)
#plot(model, margin=0.05, compress=TRUE, main="Decision Tree")
prediction <- predict(model, test)
#my_submission <- subtest[c("ID", "IND_BOM")]
#my_submission[,2]<-'NA'
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
errors[j] = error(my_submission,subtest)
print(errors[j])
#while (i_vcp<=0.01) {
model = rpart(IND_BOM ~., data = train, control = rpart.control(cp=0,00009, xval=12, maxdepth=10))
#fancyRpartPlot(model)
#plot(model, margin=0.05, compress=TRUE, main="Decision Tree")
prediction <- predict(model, test)
#my_submission <- subtest[c("ID", "IND_BOM")]
#my_submission[,2]<-'NA'
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
errors[j] = error(my_submission,subtest)
print(errors[j])
#while (i_vcp<=0.01) {
model = rpart(IND_BOM ~., data = train, control = rpart.control(cp=0,0001, xval=12, maxdepth=10))
#fancyRpartPlot(model)
#plot(model, margin=0.05, compress=TRUE, main="Decision Tree")
prediction <- predict(model, test)
#my_submission <- subtest[c("ID", "IND_BOM")]
#my_submission[,2]<-'NA'
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
errors[j] = error(my_submission,subtest)
print(errors[j])
#while (i_vcp<=0.01) {
model = rpart(IND_BOM ~., data = train, control = rpart.control(cp=0,0001, xval=12, maxdepth=10))
subdata<-treat_data(subtrain, subtest)
train <- subdata$tr
test <-subdata$te
#while (i_vcp<=0.01) {
model = rpart(IND_BOM ~., data = train, control = rpart.control(cp=0.0001, xval=12, maxdepth=10))
#fancyRpartPlot(model)
#plot(model, margin=0.05, compress=TRUE, main="Decision Tree")
prediction <- predict(model, test)
my_submission <- subtest[c("ID", "IND_BOM")]
my_submission[,2]<-'NA'
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
errors[j] = error(my_submission,subtest)
print(errors[j])
#while (i_vcp<=0.01) {
model = rpart(IND_BOM ~., data = train, control = rpart.control(cp=0.000095, xval=12, maxdepth=10))
#fancyRpartPlot(model)
#plot(model, margin=0.05, compress=TRUE, main="Decision Tree")
prediction <- predict(model, test)
my_submission <- subtest[c("ID", "IND_BOM")]
my_submission[,2]<-'NA'
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
errors[j] = error(my_submission,subtest)
print(errors[j])
#while (i_vcp<=0.01) {
model = rpart(IND_BOM ~., data = train, control = rpart.control(cp=0.00009, xval=12, maxdepth=10))
#fancyRpartPlot(model)
#plot(model, margin=0.05, compress=TRUE, main="Decision Tree")
prediction <- predict(model, test)
my_submission <- subtest[c("ID", "IND_BOM")]
my_submission[,2]<-'NA'
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
errors[j] = error(my_submission,subtest)
print(errors[j])
#while (i_vcp<=0.01) {
model = rpart(IND_BOM ~., data = train, control = rpart.control(cp=0.00008, xval=12, maxdepth=10))
#fancyRpartPlot(model)
#plot(model, margin=0.05, compress=TRUE, main="Decision Tree")
prediction <- predict(model, test)
my_submission <- subtest[c("ID", "IND_BOM")]
my_submission[,2]<-'NA'
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
errors[j] = error(my_submission,subtest)
print(errors[j])
#while (i_vcp<=0.01) {
model = rpart(IND_BOM ~., data = train, control = rpart.control(cp=0.00015, xval=12, maxdepth=10))
#fancyRpartPlot(model)
#plot(model, margin=0.05, compress=TRUE, main="Decision Tree")
prediction <- predict(model, test)
my_submission <- subtest[c("ID", "IND_BOM")]
my_submission[,2]<-'NA'
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
errors[j] = error(my_submission,subtest)
print(errors[j])
#while (i_vcp<=0.01) {
model = rpart(IND_BOM ~., data = train, control = rpart.control(cp=0.00011, xval=12, maxdepth=10))
#fancyRpartPlot(model)
#plot(model, margin=0.05, compress=TRUE, main="Decision Tree")
prediction <- predict(model, test)
my_submission <- subtest[c("ID", "IND_BOM")]
my_submission[,2]<-'NA'
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
errors[j] = error(my_submission,subtest)
print(errors[j])
model$cptable
plotcp(model$cptable)
plotcp(model)
#while (i_vcp<=0.01) {
model = rpart(IND_BOM ~., data = train, control = rpart.control(cp=0.00011, xval=12, maxdepth=10))
#fancyRpartPlot(model)
#plot(model, margin=0.05, compress=TRUE, main="Decision Tree")
prediction <- predict(model, test)
my_submission <- subtest[c("ID", "IND_BOM")]
my_submission[,2]<-'NA'
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
errors[j] = error(my_submission,subtest)
print(errors[j])
plotcp(model)
#while (i_vcp<=0.01) {
model = rpart(IND_BOM ~., data = train, control = rpart.control(cp=0.001, xval=12, maxdepth=10))
#fancyRpartPlot(model)
#plot(model, margin=0.05, compress=TRUE, main="Decision Tree")
prediction <- predict(model, test)
my_submission <- subtest[c("ID", "IND_BOM")]
my_submission[,2]<-'NA'
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
errors[j] = error(my_submission,subtest)
print(errors[j])
plotcp(model)
#while (i_vcp<=0.01) {
model = rpart(IND_BOM ~., data = train, control = rpart.control(cp=0.00001, xval=12, maxdepth=10))
#fancyRpartPlot(model)
#plot(model, margin=0.05, compress=TRUE, main="Decision Tree")
prediction <- predict(model, test)
my_submission <- subtest[c("ID", "IND_BOM")]
my_submission[,2]<-'NA'
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
errors[j] = error(my_submission,subtest)
print(errors[j])
plotcp(model)
#while (i_vcp<=0.01) {
model = rpart(IND_BOM ~., data = train, control = rpart.control(cp=0.00009, xval=12, maxdepth=10))
#fancyRpartPlot(model)
#plot(model, margin=0.05, compress=TRUE, main="Decision Tree")
prediction <- predict(model, test)
my_submission <- subtest[c("ID", "IND_BOM")]
my_submission[,2]<-'NA'
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
errors[j] = error(my_submission,subtest)
print(errors[j])
plotcp(model)
#while (i_vcp<=0.01) {
model = rpart(IND_BOM ~., data = train, control = rpart.control(cp=0.00006, xval=12, maxdepth=10))
#fancyRpartPlot(model)
#plot(model, margin=0.05, compress=TRUE, main="Decision Tree")
prediction <- predict(model, test)
my_submission <- subtest[c("ID", "IND_BOM")]
my_submission[,2]<-'NA'
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
errors[j] = error(my_submission,subtest)
print(errors[j])
plotcp(model)
model$cptable
min.xe = which(model$cptable[,4] == min(model$cptable[,4]))
min.xe
#while (i_vcp<=0.01) {
model = rpart(IND_BOM ~., data = train, control = rpart.control(cp=0.00008165, xval=12, maxdepth=10))
#fancyRpartPlot(model)
#plot(model, margin=0.05, compress=TRUE, main="Decision Tree")
prediction <- predict(model, test)
my_submission <- subtest[c("ID", "IND_BOM")]
my_submission[,2]<-'NA'
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
errors[j] = error(my_submission,subtest)
print(errors[j])
min.xe = which(model$cptable[,4] == min(model$cptable[,4]))
model$cptable[min.xe,]
#while (i_vcp<=0.01) {
model = rpart(IND_BOM ~., data = train, control = rpart.control(cp=0.00009689529, xval=12, maxdepth=10))
#fancyRpartPlot(model)
#plot(model, margin=0.05, compress=TRUE, main="Decision Tree")
prediction <- predict(model, test)
my_submission <- subtest[c("ID", "IND_BOM")]
my_submission[,2]<-'NA'
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
errors[j] = error(my_submission,subtest)
print(errors[j])
?rpart.control
=
#fancyRpartPlot(model)
#plot(model, margin=0.05, compress=TRUE, main="Decision Tree")
prediction <- predict(model, test)
my_submission <- subtest[c("ID", "IND_BOM")]
my_submission[,2]<-'NA'
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
errors[j] = error(my_submission,subtest)
print(errors[j])
j=j+1
#while (i_vcp<=0.01) {
model = rpart(IND_BOM ~., data = train, control = rpart.control(cp=0.00008165, xval=0, maxdepth=10))
#fancyRpartPlot(model)
#plot(model, margin=0.05, compress=TRUE, main="Decision Tree")
prediction <- predict(model, test)
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
errors[j] = error(my_submission,subtest)
print(errors[j])
#while (i_vcp<=0.01) {
model = rpart(IND_BOM ~., data = train, control = rpart.control(cp=0.00008165, xval=0, maxdepth=30))
#fancyRpartPlot(model)
#plot(model, margin=0.05, compress=TRUE, main="Decision Tree")
prediction <- predict(model, test)
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
errors[j] = error(my_submission,subtest)
print(errors[j])
#while (i_vcp<=0.01) {
model = rpart(IND_BOM ~., data = train, control = rpart.control(cp=0.00008165, xval=0, maxdepth=5))
#fancyRpartPlot(model)
#plot(model, margin=0.05, compress=TRUE, main="Decision Tree")
prediction <- predict(model, test)
my_submission <- subtest[c("ID", "IND_BOM")]
my_submission[,2]<-'NA'
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
errors[j] = error(my_submission,subtest)
print(errors[j])
#while (i_vcp<=0.01) {
model = rpart(IND_BOM ~., data = train, control = rpart.control(cp=0.00008165, xval=0, maxdepth=10))
#fancyRpartPlot(model)
#plot(model, margin=0.05, compress=TRUE, main="Decision Tree")
prediction <- predict(model, test)
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
errors[j] = error(my_submission,subtest)
print(errors[j])
#while (i_vcp<=0.01) {
model = rpart(IND_BOM ~., data = train, control = rpart.control(cp=0.00008165, xval=0, maxdepth=9))
#fancyRpartPlot(model)
#plot(model, margin=0.05, compress=TRUE, main="Decision Tree")
prediction <- predict(model, test)
errors[j] = error(my_submission,subtest)
print(errors[j])
ggplot(train, aes(x=VPGEO0040, fill = factor(IND_BOM)))+
stat_count(width=0.5)+
xlab("VPGEO0040") +
ylab ("Total Count") +
labs(fill = "Credit BOM")
datax <- aggregate(IND_BOM ~ VPGEO0040, FUN=mean, data=train)
plot(datax)
ggplot(train, aes(x=VP134, fill = factor(IND_BOM)))+
stat_count(width=0.5)+
xlab("VPGEO0040") +
ylab ("Total Count") +
labs(fill = "Credit BOM")
datax <- aggregate(IND_BOM ~ VP134, FUN=mean, data=train)
plot(datax)
ggplot(train, aes(x=VP134, fill = factor(IND_BOM)))+
stat_count(width=0.5)+
xlab("VPGEO0040") +
ylab ("Total Count") +
labs(fill = "Credit BOM")
ggplot(train, aes(x=VP134, fill = factor(IND_BOM)))+
stat_count(width=0.5)+
xlab("VP134") +
ylab ("Total Count") +
labs(fill = "Credit BOM")
table (train$VP134)
ggplot(train, aes(x=VP142, fill = factor(IND_BOM)))+
stat_count(width=0.5)+
xlab("VP142") +
ylab ("Total Count") +
labs(fill = "Credit BOM")
datax <- aggregate(IND_BOM ~ VP142, FUN=mean, data=train)
plot(datax)
ggplot(train, aes(x=VP134, fill = factor(IND_BOM)))+
stat_count(width=0.5)+
xlab("VP142") +
ylab ("Total Count") +
labs(fill = "Credit BOM")
ggplot(train, aes(x=VP134, fill = factor(IND_BOM)))+
stat_count(width=0.5)+
xlab("VP142") +
ylab ("Total Count") +
labs(fill = "Credit BOM")
ggplot(train_data, aes(x=VP134, fill = factor(IND_BOM)))+
stat_count(width=0.5)+
xlab("VP142") +
ylab ("Total Count") +
labs(fill = "Credit BOM")
ggplot(train_data, aes(x=VP134, fill = factor(IND_BOM)))+
stat_count(width=0.5)+
xlab("VP134") +
ylab ("Total Count") +
labs(fill = "Credit BOM")
t <- t[-(which(temp$VP134==0)),]
t <- t[-(which(temp$VP134==0)),]
ggplot(t, aes(x=VP134, fill = factor(IND_BOM)))+
stat_count(width=0.5)+
xlab("VP134") +
ylab ("Total Count") +
labs(fill = "Credit BOM")
t <- t[-(which(temp$VP134==0)),]
t <- train_data[-(which(train_data$VP134==0)),]
t <- train_data[-(which(train_data$VP134==-1)),]
ggplot(t, aes(x=VP134, fill = factor(IND_BOM)))+
stat_count(width=0.5)+
xlab("VP134") +
ylab ("Total Count") +
labs(fill = "Credit BOM")
t <- train[-(which(train$VP134==-1)),]
ggplot(t, aes(x=VP134, fill = factor(IND_BOM)))+
stat_count(width=0.5)+
xlab("VP134") +
ylab ("Total Count") +
labs(fill = "Credit BOM")
ggplot(train, aes(x=VP142, fill = factor(IND_BOM)))+
stat_count(width=0.5)+
xlab("VP142") +
ylab ("Total Count") +
labs(fill = "Credit BOM")
datax <- aggregate(IND_BOM ~ VP142, FUN=mean, data=train)
plot(datax)
#preparaçao data-------
subdata<-treat_data(subtrain, test_data)
test <-subdata$te
#fancyRpartPlot(model)
#plot(model, margin=0.05, compress=TRUE, main="Decision Tree")
prediction <- predict(model, test)
my_submission <- subtest[c("ID", "IND_BOM")]
my_submission[,2]<-'NA'
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
my_submission <- test_data[c("ID", "IND_BOM")]
my_submission[,2]<-'NA'
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
write.csv(my_submission, file ="my_submission.csv", row.names = FALSE)
table(train$VP135)
FN<-my_submission[2]-subtest[2]
#preparaçao data-------
subdata<-treat_data(subtrain, subtest)
test <-subdata$te
#fancyRpartPlot(model)
#plot(model, margin=0.05, compress=TRUE, main="Decision Tree")
prediction <- predict(model, test)
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
my_submission <- subtest[c("ID", "IND_BOM")]
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
errors[j] = error(my_submission,subtest)
print(errors[j])
FN<-my_submission[2]-subtest[2]
my_submission[2]
FN<-my_submission[2]-subtest[2]
FN<-my_submission[2]-subtest[23]
View(FN)
?sum
?sumif
FN <- sum(false_data == 1)
false_data<-my_submission[2]-subtest[23]
FN <- sum(false_data == 1)
FN
FP <- sum(false_data ==-1)
FP
TP<-my_submission[2]+subtest[23]
TP<-sum(TP==2)
TP
true_data<-my_submission[2]+subtest[23]
TP<-sum(true_data==2)
TN<-sum(true_data==0)
TP
TN
TP+TN+FN+FP
#glm---------------------------------------
model <- glm(IND_BOM ~., family=binomial(link='logit'), data=train)
#prediction
prediction <- predict(model,test,type="response")
my_submission <- subtest[c("ID", "IND_BOM")]
my_submission[,2]<-'NA'
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
false_data<-my_submission[2]-subtest[23]
FN <- sum(false_data == 1)
FP <- sum(false_data ==-1)
true_data<-my_submission[2]+subtest[23]
TP<-sum(true_data==2)
TN<-sum(true_data==0)
TP+TN+FN+FP
TN
TP
FN
FP
#bagging
mt <- bagging(IND_BOM ~., data=train, coob=TRUE)
install.packages("bagging")
?bagging
#bagging
mt <- bagging(IND_BOM ~., data=train, coob=TRUE)
#bagging
mt <- ipredbagg(IND_BOM ~., data=train, coob=TRUE)
library(rpart)
#bagging
mt <- bagging(IND_BOM ~., data=train, coob=TRUE)
install.packages("https://www.rdocumentation.org/packages/ipred")
install.packages("ipred")
#bagging
mt <- bagging(IND_BOM ~., data=train, coob=TRUE)
library(ipred)
library(/packages/ipred)
library(packages/ipred)
install.packages("ipred")
library(ipred)
#bagging
mt <- bagging(IND_BOM ~., data=train, coob=TRUE)
load("C:/Users/Miguel Nóbrega/Dropbox/Douturamento/-Ano 2/KDB/KDB - kaggle/.RData")
subdata<-treat_data(subtrain, subtest)
train <- subdata$tr
test <-subdata$te
#bagging
mt <- bagging(IND_BOM ~., data=train, coob=TRUE)
prediction <- predict(model, test)
my_submission <- subtest[c("ID", "IND_BOM")]
my_submission[,2]<-'NA'
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
errors[j] = error(my_submission,subtest)
print(errors[j])
errors = error(my_submission,subtest)
print(errors)
View(my_submission)
#bagging
mt <- bagging(IND_BOM ~., data=train, coob=TRUE)
prediction <- predict(model, test)
my_submission <- subtest[c("ID", "IND_BOM")]
my_submission[,2]<-'NA'
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
errors = error(my_submission,subtest)
print(errors)
subdata<-treat_data(subtrain, subtest)
train <- subdata$tr
test <-subdata$te
#LDA-------------
model<-lda(IND_BOM ~ ., data = train)
model <- glm(IND_BOM ~., family=binomial(link='logit'), data=train)
#prediction
prediction <- predict(model,test,type="response")
my_submission <- subtest[c("ID", "IND_BOM")]
my_submission[,2]<-'NA'
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
errors = error(my_submission, subtest)
errors
#glm---------------------------------------
model <- glm(IND_BOM ~., family=binomial(link='logit'), data=train)
#prediction
prediction <- predict(model,test,type="response")
my_submission <- subtest[c("ID", "IND_BOM")]
my_submission[,2]<-'NA'
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
load("C:/Users/Miguel Nóbrega/Dropbox/Douturamento/-Ano 2/KDB/KDB - kaggle/.RData")
#preparaçao data-------
subdata<-treat_data(subtrain, subtest)
train <- subdata$tr
test <-subdata$te
#glm---------------------------------------
model <- glm(IND_BOM ~., family=binomial(link='logit'), data=train)
#prediction
prediction <- predict(model,test,type="response")
my_submission <- subtest[c("ID", "IND_BOM")]
my_submission[,2]<-'NA'
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
errors = error(my_submission,subtest)
print(errors)
#glm---------------------------------------
model <- glm(IND_BOM ~., family=binomial(link='logit'), data=train)
#prediction
prediction <- predict(model,test,type="response")
my_submission <- subtest[c("ID", "IND_BOM")]
my_submission[,2]<-'NA'
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
errors = error(my_submission,subtest)
print(errors)
load("C:/Users/Miguel Nóbrega/Dropbox/Douturamento/-Ano 2/KDB/KDB - kaggle/.RData")
errors = error(my_submission,subtest)
print(errors)
#preparaçao data-------
subdata<-treat_data(subtrain, subtest)
train <- subdata$tr
test <-subdata$te
#glm---------------------------------------
model <- glm(IND_BOM ~., family=binomial(link='logit'), data=train)
#prediction
prediction <- predict(model,test,type="response")
my_submission <- subtest[c("ID", "IND_BOM")]
my_submission[,2]<-'NA'
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
errors = error(my_submission,subtest)
print(errors)
model = rpart(IND_BOM ~., data = train, control = rpart.control(cp=0.00008165, xval=0, maxdepth=9))
#fancyRpartPlot(model)
#plot(model, margin=0.05, compress=TRUE, main="Decision Tree")
prediction <- predict(model, test)
my_submission <- test_data[c("ID", "IND_BOM")]
my_submission[,2]<-'NA'
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
errors = error(my_submission,subtest)
print(errors)
#preparaçao data-------
subdata<-treat_data(subtrain, subtest)
train <- subdata$tr
test <-subdata$te
model = rpart(IND_BOM ~., data = train, control = rpart.control(cp=0.00008165, xval=0, maxdepth=9))
#fancyRpartPlot(model)
#plot(model, margin=0.05, compress=TRUE, main="Decision Tree")
prediction <- predict(model, test)
my_submission <- test_data[c("ID", "IND_BOM")]
my_submission[,2]<-'NA'
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
errors = error(my_submission,subtest)
print(errors)
model = rpart(IND_BOM ~., data = train, control = rpart.control(cp=0.00008165, xval=0, maxdepth=9))
#fancyRpartPlot(model)
#plot(model, margin=0.05, compress=TRUE, main="Decision Tree")
prediction <- predict(model, test)
my_submission <- subtest[c("ID", "IND_BOM")]
my_submission[,2]<-'NA'
my_submission[c("IND_BOM")] <- ifelse(prediction > 0.5,1,0)
errors = error(my_submission,subtest)
print(errors)
